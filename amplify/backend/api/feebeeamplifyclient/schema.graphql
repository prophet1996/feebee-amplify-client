enum FoodCategory {
  NONVEG
  VEG
}

type FoodPost
  @model
  @aws_iam
  @aws_cognito_user_pools
  @auth(rules: [{ allow: owner }]) {
  id: ID!
  name: String!
  price: Float!
  description: String!
  category: FoodCategory!
  cuisineTags: [String]!
  cookingTime: AWSTimestamp!
  cookingDate: AWSTimestamp!
  uploadedImageUrl: String!
  servings: Int!
  owner: ID!
  createdBy: String!
}

type User
  @model
  @aws_iam
  @aws_cognito_user_pools
  @key(name: "UserByOwner", fields: ["owner"], queryField: "UserByOwner")
  @auth(rules: [{ allow: owner, operations: [create, update, read] }]) {
  id: ID!
  phoneNumber: String!
  displayName: String!
  firstName: String!
  lastName: String!
  aadharCardLink: String! 
  documentLink: String!
  owner: ID!
  cart: Cart @connection
  orders: [Order] @connection(keyName: "byUser", fields: ["id"], limit: 20)
}

type Cart
  @model
  @aws_iam
  @aws_cognito_user_pools
  @key(name: "CartByOwner", fields: ["owner"], queryField: "CartByOwner")
  @auth(rules: [{ allow: owner, operations: [create, update, read,delete] }]) {
  id: ID!
  state: CartState
  value: Float!
  owner: ID!
}

type Order
  @model
  @auth(rules: [{ allow: owner, operations: [create, update, read] }])
  @key(name: "byUser", fields: ["userId", "postId"])
  @aws_iam
  @aws_cognito_user_pools {
  id: ID!
  userId: ID!
  price: Float!
  postId: String!
  servings: Int!
  name: String!
}

type Query @aws_iam @aws_cognito_user_pools {
  putOrder: CognitoUser @function(name: "orderfunction-${env}")
}

# These types derived from https://docs.aws.amazon.com/AWSJavaScriptSDK/latest/AWS/CognitoIdentityServiceProvider.html#adminGetUser-property
type CognitoUser {
  Username: String!
  UserAttributes: [Value]
  UserCreateDate: String
  UserLastModifiedDate: String
  Enabled: Boolean
  UserStatus: UserStatus
  MFAOptions: [MFAOption]
  PreferredMfaSetting: String
  UserMFASettingList: String
}
type Value {
  Name: String!
  Value: String
}
type MFAOption {
  DeliveryMedium: String
  AttributeName: String
}
enum UserStatus {
  UNCONFIRMED
  CONFIRMED
  ARCHIVED
  COMPROMISED
  UNKNOWN
  RESET_REQUIRED
  FORCE_CHANGE_PASSWORD
}


enum CartState {
  UNCONFIRMED
  CONFIRMED
  ARCHIVED
  COMPROMISED
  UNKNOWN
  RESET_REQUIRED
  FORCE_CHANGE_PASSWORD
}
